{% import 'snippets/component-box.twig' as box %}

<div class="comp_detailsgroup box p-xl">
    <h2>PHP scaling</h2>
    <div class="row gutter-l collapse tablet m-top-xs">
        <div class="half">
            <h4>Tinkering</h4>
            <div class="gutter-no">
                {{ box.scaling('php-xs-old',  'PHP xs',  '1 process<br>   32 MB cache',     '4', 'active') }}
                {{ box.scaling('php-s-old',   'PHP s',   '2 processes<br> 32 MB cache',   '9'   ) }}
                {{ box.scaling('php-m-old',   'PHP m',   '4 processes<br> 32 MB cache',   '24'  ) }}
            </div>
        </div>
        <div class="half">
            <h4>Production</h4>
            <div class="gutter-no">
                {{ box.scaling('php-l-old',   'PHP l',   '2×4 processes<br> 64 MB cache',    '39') }}
                {{ box.scaling('php-xl-old',  'PHP xl',  '4×4 processes<br> 128 MB cache',    '74') }}
                {{ box.scaling('php-xxl-old', 'PHP xxl', '8×4 processes<br> 256 MB cache',    '156') }}
            </div>
        </div>
    </div>
    <div class="row gutter-l m-top-l collapse">
        <div class="third">
            <h5>Processes</h5>
            <p>
                {# TODO: prüfen, kürzen #}
                PHP power is measured by processes here. How many requests a App can handle depends on the amount of processes and the length a single request takes. If a single request takes 200ms, one process can handle 5 requests per second, though maybe queued. Eight processes can handle 40 requests per second. 
                {# TBD: eigentlich müsste man auf diese thematik der Prozesse noch viel genauer eingehen, aber inwzischen ist es ja nicht mehr so wichtig. Queing von prozessen, wirklich gleichzeitige prozesse, etc #}
            </p>
        </div>
        <div class="third">
            <h5>Caching</h5>
            <p>
                {# TODO: texten, richtig machen! #}
                There are two kind caches on fortrabbit: <b>OPcache</b> accelerates code access and is included in all PHP scalings. <b>Memcache</b> accelerates data access and is an optional Component which is required for most applications running on PHP production scalings.
            </p>
        </div>
        <div class="third">
            <h5>Redundancy</h5>
            <p>
                The first production scaling runs on two separated Nodes. Each row doubles the number of Nodes the App runs on — more power and more safety.
            </p>
        </div>
    </div>

</div>